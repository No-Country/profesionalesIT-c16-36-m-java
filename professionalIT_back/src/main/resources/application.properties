#API VERSION

server.port=${PORT}

## Configuraci?n de la base de datos
spring.datasource.driver-class-name=${DB_DRIVER}
spring.datasource.url= ${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}

## Configuraci?n de JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=true
spring.jpa.open-in-view=false

api.description= This is an API to publish professional offers

# url frontend
frontend.url=${FRONTEND_URL}

# Google Login

#spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
#spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
#logging.level.org.springframework.security=TRACE

# JWT
jwt.secret = ${JWT_SECRET}

# CORS
web.cors.allowed-origins=http://example.com,http://localhost:8080,http://localhost:8081,${FRONTEND_URL}

